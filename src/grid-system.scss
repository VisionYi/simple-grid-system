@import './variable';

/**
 * simple-grid-system CSS Flexbox 網格系統 #{$grid-numbers} 格的欄位
 *
 * @author Shane Yi
 * @version #{$version}
 * @license MIT
 */
* {
  box-sizing: border-box;
}

/* 容器: 基本上跟 bootstrap 的作法是一樣的構造 */
.#{$class-ctn},
.#{$class-ctn}-fluid {
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;

  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

.#{$class-ctn} {
  @media (min-width: $size-max-mob + 1px) {
    max-width: 720px;
  }
  @media (min-width: $size-max-tab + 1px) {
    max-width: 960px;
  }
  @media (min-width: $size-max-comp) {
    max-width: 1140px;
  }
}

/**
 * 設定網格系統
 *
 * 1. 每行上下的間距都固定為 #{map-get($row-gap, general)}
 * 2. 每個欄位的間距
 *      - 一般: #{map-get($col-gap, general)}
 *      - 寬鬆: #{map-get($col-gap, relaxed)}
 *      - 更寬鬆: #{map-get($col-gap, more-relaxed)}
 * 3. .equal-gap: 使每行上下的間距修改成與欄位左右的間距一樣
 */
#{$all-grid} {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  position: relative;
  margin-bottom: -(map-get($row-gap, general));
  margin-left: -(map-get($col-gap, general) / 2);
  margin-right: -(map-get($col-gap, general) / 2);

  > #{$all-col} {
    display: block;
    position: relative;
    padding-bottom: map-get($row-gap, general);
    padding-left: map-get($col-gap, general) / 2;
    padding-right: map-get($col-gap, general) / 2;
    background-clip: content-box;
  }

  &.relaxed {
    margin-left: -(map-get($col-gap, relaxed) / 2);
    margin-right: -(map-get($col-gap, relaxed) / 2);

    > #{$all-col} {
      padding-left: map-get($col-gap, relaxed) / 2;
      padding-right: map-get($col-gap, relaxed) / 2;
    }

    &.equal-gap {
      margin-bottom: -(map-get($row-gap, relaxed));

      > #{$all-col} {
        padding-bottom: map-get($row-gap, relaxed);
      }
    }
  }

  &.more-relaxed {
    margin-left: -(map-get($col-gap, more-relaxed) / 2);
    margin-right: -(map-get($col-gap, more-relaxed) / 2);

    > #{$all-col} {
      padding-left: map-get($col-gap, more-relaxed) / 2;
      padding-right: map-get($col-gap, more-relaxed) / 2;
    }

    &.equal-gap {
      margin-bottom: -(map-get($row-gap, more-relaxed));

      > #{$all-col} {
        padding-bottom: map-get($row-gap, more-relaxed);
      }
    }
  }

  // Distribution 分配
  // center: 將所有欄位集中於中間
  // start: 將所有欄位集中於最前頭(靠左側)
  // end: 將所有欄位集中於最尾部(靠右側)
  // space-around: 將所有欄位平均分配於一行中
  // space-between: 將所有欄位散開分配於一行中
  &.center {
    justify-content: center;
  }

  &.start {
    justify-content: flex-start;
  }

  &.end {
    justify-content: flex-end;
  }

  &.space-around {
    justify-content: space-around;
  }

  &.space-between {
    justify-content: space-between;
  }
}

@each $number in $grid-numbers {
  /* 設定欄位 [#{$number}欄位] */
  @for $i from 1 through $number {

    // 欄位的比例
    .#{$class-grid}-#{$number} > .#{$class-col}-#{$i} {
      flex: 0 0 ($i / $number * 100%);
      max-width: $i / $number * 100%;
    }

    // 左空欄
    @if $i < $number {
      .#{$class-grid}-#{$number} > .left-#{$i}#{$all-col} {
        margin-left: $i / $number * 100%;
      }
    }

    // 右空欄
    @if $i < $number {
      .#{$class-grid}-#{$number} > .right-#{$i}#{$all-col} {
        margin-right: $i / $number * 100%;
      }
    }
  }

  /**
  * [#{$number}欄位]
  * 當頁面螢幕大小進入 tablet 或 mobile 時觸發
  * 1. 欄位設計: 每個欄位都會改成等寬的比例
  * 2. 把所有的 "左右空欄" 都消除
  */
  @media (max-width: $size-max-tab) {
    .#{$class-grid}-#{$number} {
      &#{$all-tab} > #{$all-col} {
        @include clear-empty-col;
      }

      @for $i from 1 through $tab-max-col {
        &.#{$class-tab}-#{$i} > #{$all-col} {
          flex: 0 0 (100% / $i);
          max-width: 100% / $i;
        }
      }
    }
  }

  @media (max-width: $size-max-mob) {
    .#{$class-grid}-#{$number} {
      &#{$all-mob} > #{$all-col} {
        @include clear-empty-col;
      }

      @for $i from 1 through $mob-max-col {
        &.#{$class-mob}-#{$i} > #{$all-col} {
          flex: 0 0 (100% / $i);
          max-width: 100% / $i;
        }
      }
    }
  }
}

/* [響應式設計] 區塊的顯示與隱藏 */
@media (min-width: $size-max-tab + 1px) {
  .#{$class-tab}-#{$class-mob}-only,
  .#{$class-mob}-#{$class-tab}-only,
  .#{$class-mob}-only,
  .#{$class-tab}-only {
    @include hide-element;
  }
}

@media (min-width: $size-max-mob + 1px) and (max-width: $size-max-tab) {
  .#{$class-comp}-#{$class-mob}-only,
  .#{$class-mob}-#{$class-comp}-only,
  .#{$class-mob}-only,
  .#{$class-comp}-only {
    @include hide-element;
  }
}

@media (max-width: $size-max-mob) {
  .#{$class-comp}-#{$class-tab}-only,
  .#{$class-tab}-#{$class-comp}-only,
  .#{$class-tab}-only,
  .#{$class-comp}-only {
    @include hide-element;
  }
}

/* 把一行中剩餘的空間都自動填滿 */
#{$all-grid} {
  > .auto-fill#{$all-col} {
    @include clear-empty-col;
    @include fill;
  }

  @media (max-width: $size-max-tab) {
    > .fill-#{$class-tab}#{$all-col} {
      @include clear-empty-col;
      @include fill;
    }
  }

  @media (max-width: $size-max-mob) {
    > .fill-#{$class-mob}#{$all-col} {
      @include clear-empty-col;
      @include fill;
    }
  }

  // 填滿一整行，用來強制中斷欄位跳到新的一行
  > .w-100 {
    flex: 0 0 100%;
  }
}

/**
 * 如果 .grid 外面再包一層有使用背景屬性的 div 元素時，底部會產生多餘的背景
 * 此類別屬性能修補此 Bug，請加在外面那一層的 div 元素上
 */
.fix-extra-bottom::after {
  content: '';
  display: table;
}
